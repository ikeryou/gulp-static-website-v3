/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$img1Name: 'img1';
$img1X: 0px;
$img1Y: 1026px;
$img1OffsetX: 0px;
$img1OffsetY: -1026px;
$img1Width: 1024px;
$img1Height: 437px;
$img1TotalWidth: 2048px;
$img1TotalHeight: 1965px;
$img1Image: '../img/sprites.png';
$img1: (0px, 1026px, 0px, -1026px, 1024px, 437px, 2048px, 1965px, '../img/sprites.png', 'img1', );
$img2Name: 'img2';
$img2X: 0px;
$img2Y: 0px;
$img2OffsetX: 0px;
$img2OffsetY: 0px;
$img2Width: 2048px;
$img2Height: 1024px;
$img2TotalWidth: 2048px;
$img2TotalHeight: 1965px;
$img2Image: '../img/sprites.png';
$img2: (0px, 0px, 0px, 0px, 2048px, 1024px, 2048px, 1965px, '../img/sprites.png', 'img2', );
$thumbName: 'thumb';
$thumbX: 0px;
$thumbY: 1465px;
$thumbOffsetX: 0px;
$thumbOffsetY: -1465px;
$thumbWidth: 500px;
$thumbHeight: 500px;
$thumbTotalWidth: 2048px;
$thumbTotalHeight: 1965px;
$thumbImage: '../img/sprites.png';
$thumb: (0px, 1465px, 0px, -1465px, 500px, 500px, 2048px, 1965px, '../img/sprites.png', 'thumb', );
$thumb2Name: 'thumb2';
$thumb2X: 502px;
$thumb2Y: 1465px;
$thumb2OffsetX: -502px;
$thumb2OffsetY: -1465px;
$thumb2Width: 500px;
$thumb2Height: 500px;
$thumb2TotalWidth: 2048px;
$thumb2TotalHeight: 1965px;
$thumb2Image: '../img/sprites.png';
$thumb2: (502px, 1465px, -502px, -1465px, 500px, 500px, 2048px, 1965px, '../img/sprites.png', 'thumb2', );
$spritesheetWidth: 2048px;
$spritesheetHeight: 1965px;
$spritesheetImage: '../img/sprites.png';
$spritesheetSprites: ($img1, $img2, $thumb, $thumb2, );
$spritesheet: (2048px, 1965px, '../img/sprites.png', $spritesheetSprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
